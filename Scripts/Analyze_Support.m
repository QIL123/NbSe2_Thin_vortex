classdef Analyze_Support
    methods(Static)
        
        
        function Diff_Cell=Image_Diff(M1_Loc,M2_Loc,Remove_Lines)
            
            if ~exist('Remove_Lines','var')
                Remove_Lines=1;
            end
            % Open manualy two Matrixes
            % Diffreent between them
            % Save in cell the matrixes and the file names
            M1=load(M1_Loc);
            M2=load(M2_Loc);
            
            % Remove lines
            if Remove_Lines
                M1=Analyze_Support.RemoveLines(M1);
                M2=Analyze_Support.RemoveLines(M2);        
            end
            [M_Diff,~]=ABdiff2(M1,M2);
            Diff_Cell={M1,M2,M_Diff};
        end
        
        
        function im = RemoveLines(x)
            iml = size(x);
            immean = trimmean(x,40,2);
        %     imstd = std(x(:));
        %     mask = (abs(x)<1.5*imstd);
        %     s = sum(mask');
        %     s = s + (s==0);
        %     immean = (sum((x.*mask)')./s)';
            rep = repmat(immean,1,iml(2));
            im = x-rep;
        end

        
        function [Min, Max, Delta]=Find_Min_Max_Delta(Data)
            Min=min(min(Data));
            Max=max(max(Data));
            Delta=Max-Min;
        end
            
        function [Dir]=Dir_Clean(Dir,Suffix)
            
            % This function delets the files without the right suffix
            % Con_Length check the length of the suffix
            % Con_2 check the value of the suffix
            for i=linspace(length(Dir),1,length(Dir))
                Con_Length=length(Dir(i).name)<length(Suffix);
                if Con_Length
                    Dir(i)=[];
                elseif ~strcmp(Dir(i).name(end-length(Suffix)+1:end),Suffix)
                    Dir(i)=[];
                end
            end
        end
        
        function [Data] = SXM2Matrix(sxmFile,Sxm_Channel,Raw)
            % This function return a cell aray of matrixes 
            % each matrix is the value of the scan from nanonis
            % odd forowrd, even - backword
            if ~exist('Raw','Var')
               Raw=0; 
            end
            Data_2={};
            Data={};
            if Raw
               Data_2=sxmFile.channels(Sxm_Channel).rawData;
            else
               Data_2=sxmFile.channels(Sxm_Channel).data;
            end
            % Angle
            if sxmFile.header.scan_angle==0
                   Data=flipud(Data_2);
            else   
                   Data=flipud(Data_2);
            end
        end
        
        function j=Find_Loc_Info(Info,Name)
            % This function find the location of a name in the info file
            % Probably there is a better way...
            Exist_Column = strcmp('Batch_Num',Info.Properties.VariableNames);
            if any(Exist_Column) % for batch data
                Con_Length=length(Name)==length(Info.Name{1});
                if ~Con_Length
                    Name=[Name,'002.sxm'];
                end
                
                for i=1:length(Info.Name)
                    if strcmp(Info.Name{i},Name)
                        j=i;
                        break
                    end
                end
            else % for day data
                j = find(contains(Info.Name,Name));
            end
        end

        function [r,g,b]=Get_Gold()
            r=[0.988235294117647;0.988235294117647;0.988235294117647;0.984313725490196;0.984313725490196;0.984313725490196;0.980392156862745;0.980392156862745;0.976470588235294;0.976470588235294;0.976470588235294;0.972549019607843;0.972549019607843;0.972549019607843;0.968627450980392;0.968627450980392;0.964705882352941;0.964705882352941;0.964705882352941;0.960784313725490;0.960784313725490;0.960784313725490;0.956862745098039;0.956862745098039;0.952941176470588;0.952941176470588;0.952941176470588;0.949019607843137;0.949019607843137;0.949019607843137;0.945098039215686;0.945098039215686;0.941176470588235;0.941176470588235;0.941176470588235;0.937254901960784;0.937254901960784;0.937254901960784;0.933333333333333;0.933333333333333;0.929411764705882;0.929411764705882;0.929411764705882;0.925490196078431;0.925490196078431;0.925490196078431;0.921568627450980;0.921568627450980;0.917647058823529;0.917647058823529;0.917647058823529;0.913725490196078;0.913725490196078;0.913725490196078;0.909803921568627;0.909803921568627;0.905882352941177;0.905882352941177;0.905882352941177;0.901960784313726;0.901960784313726;0.901960784313726;0.898039215686275;0.898039215686275;0.894117647058824;0.894117647058824;0.894117647058824;0.890196078431373;0.890196078431373;0.886274509803922;0.886274509803922;0.886274509803922;0.882352941176471;0.882352941176471;0.882352941176471;0.878431372549020;0.878431372549020;0.874509803921569;0.874509803921569;0.874509803921569;0.870588235294118;0.870588235294118;0.870588235294118;0.866666666666667;0.866666666666667;0.862745098039216;0.862745098039216;0.862745098039216;0.858823529411765;0.858823529411765;0.858823529411765;0.854901960784314;0.854901960784314;0.850980392156863;0.850980392156863;0.850980392156863;0.847058823529412;0.847058823529412;0.847058823529412;0.843137254901961;0.843137254901961;0.839215686274510;0.839215686274510;0.839215686274510;0.835294117647059;0.835294117647059;0.835294117647059;0.831372549019608;0.831372549019608;0.827450980392157;0.827450980392157;0.827450980392157;0.823529411764706;0.823529411764706;0.823529411764706;0.819607843137255;0.819607843137255;0.815686274509804;0.815686274509804;0.815686274509804;0.811764705882353;0.811764705882353;0.811764705882353;0.807843137254902;0.807843137254902;0.803921568627451;0.803921568627451;0.803921568627451;0.800000000000000;0.800000000000000;0.796078431372549;0.796078431372549;0.796078431372549;0.792156862745098;0.792156862745098;0.792156862745098;0.788235294117647;0.788235294117647;0.784313725490196;0.784313725490196;0.784313725490196;0.780392156862745;0.780392156862745;0.780392156862745;0.776470588235294;0.776470588235294;0.772549019607843;0.772549019607843;0.772549019607843;0.768627450980392;0.768627450980392;0.768627450980392;0.764705882352941;0.764705882352941;0.760784313725490;0.760784313725490;0.760784313725490;0.756862745098039;0.756862745098039;0.756862745098039;0.752941176470588;0.752941176470588;0.749019607843137;0.749019607843137;0.749019607843137;0.745098039215686;0.745098039215686;0.745098039215686;0.741176470588235;0.741176470588235;0.737254901960784;0.737254901960784;0.733333333333333;0.733333333333333;0.729411764705882;0.729411764705882;0.725490196078431;0.721568627450980;0.721568627450980;0.717647058823529;0.717647058823529;0.713725490196078;0.709803921568628;0.709803921568628;0.705882352941177;0.705882352941177;0.701960784313725;0.701960784313725;0.698039215686275;0.694117647058824;0.694117647058824;0.690196078431373;0.690196078431373;0.686274509803922;0.682352941176471;0.682352941176471;0.678431372549020;0.678431372549020;0.674509803921569;0.670588235294118;0.670588235294118;0.666666666666667;0.666666666666667;0.662745098039216;0.662745098039216;0.658823529411765;0.654901960784314;0.654901960784314;0.650980392156863;0.650980392156863;0.647058823529412;0.643137254901961;0.643137254901961;0.639215686274510;0.639215686274510;0.635294117647059;0.631372549019608;0.631372549019608;0.627450980392157;0.627450980392157;0.623529411764706;0.623529411764706;0.619607843137255;0.615686274509804;0.615686274509804;0.611764705882353;0.611764705882353;0.607843137254902;0.603921568627451;0.603921568627451;0.600000000000000;0.600000000000000;0.596078431372549;0.592156862745098;0.592156862745098;0.588235294117647;0.588235294117647;0.584313725490196;0.580392156862745;0.580392156862745;0.576470588235294;0.576470588235294;0.572549019607843;0.572549019607843;0.568627450980392;0.564705882352941;0.564705882352941;0.560784313725490;0.560784313725490;0.556862745098039;0.552941176470588;0.552941176470588;0.549019607843137;0.549019607843137;0.545098039215686;0.541176470588235;0.541176470588235;0.537254901960784;0.537254901960784;0.533333333333333;0.533333333333333;0.529411764705882;0.525490196078431;0.525490196078431;0.521568627450980;0.521568627450980;0.517647058823530;0.513725490196078;0.513725490196078;0.509803921568627;0.509803921568627;0.505882352941176;0.501960784313726;0.501960784313726;0.498039215686275;0.498039215686275;0.494117647058824;0.494117647058824;0.490196078431373;0.486274509803922;0.486274509803922;0.482352941176471;0.482352941176471;0.478431372549020;0.474509803921569;0.474509803921569;0.470588235294118;0.470588235294118;0.466666666666667;0.462745098039216;0.462745098039216;0.458823529411765;0.458823529411765;0.454901960784314;0.454901960784314;0.450980392156863;0.447058823529412;0.447058823529412;0.443137254901961;0.443137254901961;0.439215686274510;0.435294117647059;0.435294117647059;0.431372549019608;0.431372549019608;0.427450980392157;0.423529411764706;0.423529411764706;0.419607843137255;0.419607843137255;0.415686274509804;0.415686274509804;0.411764705882353;0.407843137254902;0.407843137254902;0.403921568627451;0.403921568627451;0.400000000000000;0.396078431372549;0.396078431372549;0.392156862745098;0.392156862745098;0.388235294117647;0.384313725490196;0.384313725490196;0.380392156862745;0.380392156862745;0.376470588235294;0.372549019607843;0.372549019607843;0.368627450980392;0.368627450980392;0.364705882352941;0.364705882352941;0.360784313725490;0.356862745098039;0.356862745098039;0.352941176470588;0.352941176470588;0.349019607843137;0.345098039215686;0.345098039215686;0.341176470588235;0.341176470588235;0.337254901960784;0.337254901960784;0.333333333333333;0.333333333333333;0.329411764705882;0.329411764705882;0.325490196078431;0.325490196078431;0.321568627450980;0.321568627450980;0.317647058823529;0.317647058823529;0.313725490196078;0.313725490196078;0.309803921568627;0.309803921568627;0.305882352941177;0.301960784313725;0.301960784313725;0.298039215686275;0.298039215686275;0.294117647058824;0.294117647058824;0.290196078431373;0.290196078431373;0.286274509803922;0.286274509803922;0.282352941176471;0.282352941176471;0.278431372549020;0.278431372549020;0.274509803921569;0.274509803921569;0.270588235294118;0.270588235294118;0.266666666666667;0.266666666666667;0.262745098039216;0.262745098039216;0.258823529411765;0.258823529411765;0.254901960784314;0.254901960784314;0.250980392156863;0.247058823529412;0.247058823529412;0.243137254901961;0.243137254901961;0.239215686274510;0.239215686274510;0.235294117647059;0.235294117647059;0.231372549019608;0.231372549019608;0.227450980392157;0.227450980392157;0.223529411764706;0.223529411764706;0.219607843137255;0.219607843137255;0.215686274509804;0.215686274509804;0.211764705882353;0.211764705882353;0.207843137254902;0.207843137254902;0.203921568627451;0.203921568627451;0.200000000000000;0.200000000000000;0.196078431372549;0.196078431372549;0.192156862745098;0.188235294117647;0.188235294117647;0.184313725490196;0.184313725490196;0.180392156862745;0.180392156862745;0.176470588235294;0.176470588235294;0.172549019607843;0.172549019607843;0.168627450980392;0.168627450980392;0.164705882352941;0.164705882352941;0.160784313725490;0.160784313725490;0.156862745098039;0.156862745098039;0.152941176470588;0.152941176470588;0.149019607843137;0.149019607843137;0.145098039215686;0.145098039215686;0.141176470588235;0.141176470588235;0.137254901960784;0.133333333333333;0.133333333333333;0.129411764705882;0.129411764705882;0.125490196078431;0.125490196078431;0.121568627450980;0.121568627450980;0.117647058823529;0.117647058823529;0.113725490196078;0.113725490196078;0.109803921568627;0.109803921568627;0.105882352941176;0.105882352941176;0.101960784313725;0.101960784313725;0.0980392156862745;0.0980392156862745;0.0941176470588235;0.0941176470588235;0.0901960784313726;0.0901960784313726;0.0862745098039216;0.0862745098039216;0.0823529411764706;0.0784313725490196;0.0784313725490196;0.0745098039215686;0.0745098039215686;0.0705882352941177;0.0705882352941177;0.0666666666666667;0.0666666666666667;0.0627450980392157;0.0627450980392157;0.0588235294117647;0.0588235294117647;0.0549019607843137;0.0549019607843137;0.0509803921568627;0.0509803921568627;0.0470588235294118;0.0470588235294118;0.0431372549019608;0.0431372549019608;0.0392156862745098;0.0392156862745098;0.0352941176470588;0.0352941176470588;0.0313725490196078;0.0313725490196078;0.0274509803921569;0.0235294117647059;0.0235294117647059;0.0196078431372549;0.0196078431372549;0.0156862745098039;0.0156862745098039;0.0117647058823529;0.0117647058823529;0.00784313725490196;0.00784313725490196;0.00392156862745098;0.00392156862745098;0;0;0];
            g=[0.988235294117647;0.988235294117647;0.984313725490196;0.980392156862745;0.980392156862745;0.976470588235294;0.972549019607843;0.968627450980392;0.968627450980392;0.964705882352941;0.960784313725490;0.956862745098039;0.956862745098039;0.952941176470588;0.949019607843137;0.949019607843137;0.945098039215686;0.941176470588235;0.937254901960784;0.937254901960784;0.933333333333333;0.929411764705882;0.925490196078431;0.925490196078431;0.921568627450980;0.917647058823529;0.917647058823529;0.913725490196078;0.909803921568627;0.905882352941177;0.905882352941177;0.901960784313726;0.898039215686275;0.894117647058824;0.894117647058824;0.890196078431373;0.886274509803922;0.882352941176471;0.882352941176471;0.878431372549020;0.874509803921569;0.874509803921569;0.870588235294118;0.866666666666667;0.862745098039216;0.862745098039216;0.858823529411765;0.854901960784314;0.850980392156863;0.850980392156863;0.847058823529412;0.843137254901961;0.843137254901961;0.839215686274510;0.835294117647059;0.831372549019608;0.831372549019608;0.827450980392157;0.823529411764706;0.819607843137255;0.819607843137255;0.815686274509804;0.811764705882353;0.807843137254902;0.807843137254902;0.803921568627451;0.800000000000000;0.800000000000000;0.796078431372549;0.792156862745098;0.788235294117647;0.788235294117647;0.784313725490196;0.780392156862745;0.776470588235294;0.776470588235294;0.772549019607843;0.768627450980392;0.768627450980392;0.764705882352941;0.760784313725490;0.756862745098039;0.756862745098039;0.752941176470588;0.749019607843137;0.745098039215686;0.745098039215686;0.741176470588235;0.737254901960784;0.737254901960784;0.733333333333333;0.729411764705882;0.725490196078431;0.725490196078431;0.721568627450980;0.717647058823529;0.713725490196078;0.713725490196078;0.709803921568628;0.705882352941177;0.701960784313725;0.701960784313725;0.698039215686275;0.694117647058824;0.694117647058824;0.690196078431373;0.686274509803922;0.682352941176471;0.682352941176471;0.678431372549020;0.674509803921569;0.670588235294118;0.670588235294118;0.666666666666667;0.662745098039216;0.662745098039216;0.658823529411765;0.654901960784314;0.650980392156863;0.650980392156863;0.647058823529412;0.643137254901961;0.639215686274510;0.639215686274510;0.635294117647059;0.631372549019608;0.627450980392157;0.627450980392157;0.623529411764706;0.619607843137255;0.619607843137255;0.615686274509804;0.611764705882353;0.607843137254902;0.607843137254902;0.603921568627451;0.600000000000000;0.596078431372549;0.596078431372549;0.592156862745098;0.588235294117647;0.588235294117647;0.584313725490196;0.580392156862745;0.576470588235294;0.576470588235294;0.572549019607843;0.568627450980392;0.564705882352941;0.564705882352941;0.560784313725490;0.556862745098039;0.556862745098039;0.552941176470588;0.549019607843137;0.545098039215686;0.545098039215686;0.541176470588235;0.537254901960784;0.533333333333333;0.533333333333333;0.529411764705882;0.525490196078431;0.521568627450980;0.521568627450980;0.517647058823530;0.513725490196078;0.513725490196078;0.509803921568627;0.505882352941176;0.501960784313726;0.501960784313726;0.498039215686275;0.498039215686275;0.494117647058824;0.490196078431373;0.490196078431373;0.486274509803922;0.486274509803922;0.482352941176471;0.478431372549020;0.478431372549020;0.474509803921569;0.474509803921569;0.470588235294118;0.466666666666667;0.466666666666667;0.462745098039216;0.462745098039216;0.458823529411765;0.458823529411765;0.454901960784314;0.450980392156863;0.450980392156863;0.447058823529412;0.447058823529412;0.443137254901961;0.439215686274510;0.439215686274510;0.435294117647059;0.435294117647059;0.431372549019608;0.427450980392157;0.427450980392157;0.423529411764706;0.423529411764706;0.419607843137255;0.419607843137255;0.415686274509804;0.411764705882353;0.411764705882353;0.407843137254902;0.407843137254902;0.403921568627451;0.400000000000000;0.400000000000000;0.396078431372549;0.396078431372549;0.392156862745098;0.388235294117647;0.388235294117647;0.384313725490196;0.384313725490196;0.380392156862745;0.380392156862745;0.376470588235294;0.372549019607843;0.372549019607843;0.368627450980392;0.368627450980392;0.364705882352941;0.360784313725490;0.360784313725490;0.356862745098039;0.356862745098039;0.352941176470588;0.349019607843137;0.349019607843137;0.345098039215686;0.345098039215686;0.341176470588235;0.337254901960784;0.337254901960784;0.333333333333333;0.333333333333333;0.329411764705882;0.329411764705882;0.325490196078431;0.321568627450980;0.321568627450980;0.317647058823529;0.317647058823529;0.313725490196078;0.309803921568627;0.309803921568627;0.305882352941177;0.305882352941177;0.301960784313725;0.298039215686275;0.298039215686275;0.294117647058824;0.294117647058824;0.290196078431373;0.290196078431373;0.286274509803922;0.282352941176471;0.282352941176471;0.278431372549020;0.278431372549020;0.274509803921569;0.270588235294118;0.270588235294118;0.266666666666667;0.266666666666667;0.262745098039216;0.258823529411765;0.258823529411765;0.254901960784314;0.254901960784314;0.250980392156863;0.250980392156863;0.247058823529412;0.243137254901961;0.243137254901961;0.239215686274510;0.239215686274510;0.235294117647059;0.231372549019608;0.231372549019608;0.227450980392157;0.227450980392157;0.223529411764706;0.219607843137255;0.219607843137255;0.215686274509804;0.215686274509804;0.211764705882353;0.211764705882353;0.207843137254902;0.203921568627451;0.203921568627451;0.200000000000000;0.200000000000000;0.196078431372549;0.192156862745098;0.192156862745098;0.188235294117647;0.188235294117647;0.184313725490196;0.180392156862745;0.180392156862745;0.176470588235294;0.176470588235294;0.172549019607843;0.172549019607843;0.168627450980392;0.164705882352941;0.164705882352941;0.160784313725490;0.160784313725490;0.156862745098039;0.152941176470588;0.152941176470588;0.149019607843137;0.149019607843137;0.145098039215686;0.141176470588235;0.141176470588235;0.137254901960784;0.137254901960784;0.133333333333333;0.129411764705882;0.129411764705882;0.125490196078431;0.125490196078431;0.121568627450980;0.121568627450980;0.117647058823529;0.113725490196078;0.113725490196078;0.109803921568627;0.109803921568627;0.105882352941176;0.105882352941176;0.105882352941176;0.105882352941176;0.105882352941176;0.105882352941176;0.101960784313725;0.101960784313725;0.101960784313725;0.101960784313725;0.101960784313725;0.101960784313725;0.0980392156862745;0.0980392156862745;0.0980392156862745;0.0980392156862745;0.0980392156862745;0.0980392156862745;0.0941176470588235;0.0941176470588235;0.0941176470588235;0.0941176470588235;0.0941176470588235;0.0941176470588235;0.0901960784313726;0.0901960784313726;0.0901960784313726;0.0901960784313726;0.0901960784313726;0.0901960784313726;0.0862745098039216;0.0862745098039216;0.0862745098039216;0.0862745098039216;0.0862745098039216;0.0862745098039216;0.0862745098039216;0.0823529411764706;0.0823529411764706;0.0823529411764706;0.0823529411764706;0.0823529411764706;0.0823529411764706;0.0784313725490196;0.0784313725490196;0.0784313725490196;0.0784313725490196;0.0784313725490196;0.0784313725490196;0.0745098039215686;0.0745098039215686;0.0745098039215686;0.0745098039215686;0.0745098039215686;0.0745098039215686;0.0705882352941177;0.0705882352941177;0.0705882352941177;0.0705882352941177;0.0705882352941177;0.0705882352941177;0.0666666666666667;0.0666666666666667;0.0666666666666667;0.0666666666666667;0.0666666666666667;0.0666666666666667;0.0627450980392157;0.0627450980392157;0.0627450980392157;0.0627450980392157;0.0627450980392157;0.0627450980392157;0.0588235294117647;0.0588235294117647;0.0588235294117647;0.0588235294117647;0.0588235294117647;0.0588235294117647;0.0549019607843137;0.0549019607843137;0.0549019607843137;0.0549019607843137;0.0549019607843137;0.0549019607843137;0.0509803921568627;0.0509803921568627;0.0509803921568627;0.0509803921568627;0.0509803921568627;0.0509803921568627;0.0470588235294118;0.0470588235294118;0.0470588235294118;0.0470588235294118;0.0470588235294118;0.0470588235294118;0.0431372549019608;0.0431372549019608;0.0431372549019608;0.0431372549019608;0.0431372549019608;0.0431372549019608;0.0392156862745098;0.0392156862745098;0.0392156862745098;0.0392156862745098;0.0392156862745098;0.0392156862745098;0.0352941176470588;0.0352941176470588;0.0352941176470588;0.0352941176470588;0.0352941176470588;0.0352941176470588;0.0313725490196078;0.0313725490196078;0.0313725490196078;0.0313725490196078;0.0313725490196078;0.0313725490196078;0.0274509803921569;0.0274509803921569;0.0274509803921569;0.0274509803921569;0.0274509803921569;0.0274509803921569;0.0274509803921569;0.0235294117647059;0.0235294117647059;0.0235294117647059;0.0235294117647059;0.0235294117647059;0.0235294117647059;0.0196078431372549;0.0196078431372549;0.0196078431372549;0.0196078431372549;0.0196078431372549;0.0196078431372549;0.0156862745098039;0.0156862745098039;0.0156862745098039;0.0156862745098039;0.0156862745098039;0.0156862745098039;0.0117647058823529;0.0117647058823529;0.0117647058823529;0.0117647058823529;0.0117647058823529;0.0117647058823529;0.00784313725490196;0.00784313725490196;0.00784313725490196;0.00784313725490196;0.00784313725490196;0.00784313725490196;0.00392156862745098;0.00392156862745098;0.00392156862745098;0.00392156862745098;0.00392156862745098;0.00392156862745098;0;0;0;0;0;0;0];
            b=[0.501960784313726;0.498039215686275;0.494117647058824;0.494117647058824;0.490196078431373;0.486274509803922;0.482352941176471;0.482352941176471;0.478431372549020;0.474509803921569;0.470588235294118;0.470588235294118;0.466666666666667;0.462745098039216;0.458823529411765;0.458823529411765;0.454901960784314;0.450980392156863;0.447058823529412;0.447058823529412;0.443137254901961;0.439215686274510;0.435294117647059;0.435294117647059;0.431372549019608;0.427450980392157;0.423529411764706;0.423529411764706;0.419607843137255;0.415686274509804;0.411764705882353;0.411764705882353;0.407843137254902;0.403921568627451;0.400000000000000;0.400000000000000;0.396078431372549;0.392156862745098;0.388235294117647;0.388235294117647;0.384313725490196;0.380392156862745;0.376470588235294;0.376470588235294;0.372549019607843;0.368627450980392;0.364705882352941;0.364705882352941;0.360784313725490;0.356862745098039;0.352941176470588;0.352941176470588;0.349019607843137;0.345098039215686;0.341176470588235;0.341176470588235;0.337254901960784;0.333333333333333;0.329411764705882;0.329411764705882;0.325490196078431;0.321568627450980;0.317647058823529;0.317647058823529;0.313725490196078;0.309803921568627;0.305882352941177;0.305882352941177;0.301960784313725;0.298039215686275;0.294117647058824;0.290196078431373;0.290196078431373;0.286274509803922;0.282352941176471;0.278431372549020;0.278431372549020;0.274509803921569;0.270588235294118;0.266666666666667;0.266666666666667;0.262745098039216;0.258823529411765;0.254901960784314;0.254901960784314;0.250980392156863;0.247058823529412;0.243137254901961;0.243137254901961;0.239215686274510;0.235294117647059;0.231372549019608;0.231372549019608;0.227450980392157;0.223529411764706;0.219607843137255;0.219607843137255;0.215686274509804;0.211764705882353;0.207843137254902;0.207843137254902;0.203921568627451;0.200000000000000;0.196078431372549;0.196078431372549;0.192156862745098;0.188235294117647;0.184313725490196;0.184313725490196;0.180392156862745;0.176470588235294;0.172549019607843;0.172549019607843;0.168627450980392;0.164705882352941;0.160784313725490;0.160784313725490;0.156862745098039;0.152941176470588;0.149019607843137;0.149019607843137;0.145098039215686;0.141176470588235;0.137254901960784;0.137254901960784;0.133333333333333;0.129411764705882;0.125490196078431;0.125490196078431;0.121568627450980;0.117647058823529;0.113725490196078;0.113725490196078;0.109803921568627;0.105882352941176;0.101960784313725;0.101960784313725;0.0980392156862745;0.0941176470588235;0.0901960784313726;0.0862745098039216;0.0862745098039216;0.0823529411764706;0.0784313725490196;0.0745098039215686;0.0745098039215686;0.0705882352941177;0.0666666666666667;0.0627450980392157;0.0627450980392157;0.0588235294117647;0.0549019607843137;0.0509803921568627;0.0509803921568627;0.0470588235294118;0.0431372549019608;0.0392156862745098;0.0392156862745098;0.0352941176470588;0.0313725490196078;0.0274509803921569;0.0274509803921569;0.0235294117647059;0.0196078431372549;0.0156862745098039;0.0156862745098039;0.0117647058823529;0.00784313725490196;0.00392156862745098;0.00392156862745098;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0];
        end
        
        
        function [r,g,b]=Get_WYCO()
            r=[0.996078431372549;0.992156862745098;0.988235294117647;0.984313725490196;0.980392156862745;0.976470588235294;0.972549019607843;0.968627450980392;0.964705882352941;0.960784313725490;0.956862745098039;0.952941176470588;0.949019607843137;0.945098039215686;0.941176470588235;0.937254901960784;0.933333333333333;0.929411764705882;0.925490196078431;0.921568627450980;0.917647058823529;0.909803921568627;0.905882352941177;0.901960784313726;0.898039215686275;0.894117647058824;0.886274509803922;0.882352941176471;0.878431372549020;0.874509803921569;0.870588235294118;0.866666666666667;0.858823529411765;0.854901960784314;0.850980392156863;0.847058823529412;0.839215686274510;0.835294117647059;0.831372549019608;0.827450980392157;0.823529411764706;0.819607843137255;0.811764705882353;0.807843137254902;0.803921568627451;0.800000000000000;0.800000000000000;0.796078431372549;0.792156862745098;0.788235294117647;0.788235294117647;0.784313725490196;0.780392156862745;0.776470588235294;0.772549019607843;0.768627450980392;0.768627450980392;0.764705882352941;0.760784313725490;0.756862745098039;0.752941176470588;0.752941176470588;0.749019607843137;0.745098039215686;0.741176470588235;0.737254901960784;0.733333333333333;0.729411764705882;0.729411764705882;0.725490196078431;0.721568627450980;0.717647058823529;0.713725490196078;0.709803921568628;0.705882352941177;0.701960784313725;0.698039215686275;0.694117647058824;0.690196078431373;0.686274509803922;0.682352941176471;0.682352941176471;0.678431372549020;0.674509803921569;0.670588235294118;0.666666666666667;0.662745098039216;0.658823529411765;0.654901960784314;0.650980392156863;0.647058823529412;0.643137254901961;0.639215686274510;0.635294117647059;0.631372549019608;0.627450980392157;0.623529411764706;0.619607843137255;0.611764705882353;0.607843137254902;0.603921568627451;0.600000000000000;0.596078431372549;0.592156862745098;0.588235294117647;0.584313725490196;0.580392156862745;0.576470588235294;0.572549019607843;0.568627450980392;0.564705882352941;0.560784313725490;0.552941176470588;0.549019607843137;0.545098039215686;0.541176470588235;0.537254901960784;0.533333333333333;0.529411764705882;0.525490196078431;0.521568627450980;0.517647058823530;0.513725490196078;0.509803921568627;0.505882352941176;0.501960784313726;0.498039215686275;0.494117647058824;0.490196078431373;0.482352941176471;0.478431372549020;0.474509803921569;0.470588235294118;0.466666666666667;0.462745098039216;0.458823529411765;0.454901960784314;0.450980392156863;0.447058823529412;0.443137254901961;0.439215686274510;0.431372549019608;0.427450980392157;0.423529411764706;0.419607843137255;0.415686274509804;0.411764705882353;0.403921568627451;0.400000000000000;0.396078431372549;0.392156862745098;0.388235294117647;0.384313725490196;0.380392156862745;0.376470588235294;0.372549019607843;0.364705882352941;0.360784313725490;0.356862745098039;0.352941176470588;0.349019607843137;0.345098039215686;0.337254901960784;0.333333333333333;0.329411764705882;0.325490196078431;0.321568627450980;0.313725490196078;0.309803921568627;0.305882352941177;0.301960784313725;0.298039215686275;0.294117647058824;0.290196078431373;0.286274509803922;0.278431372549020;0.274509803921569;0.270588235294118;0.266666666666667;0.262745098039216;0.254901960784314;0.250980392156863;0.247058823529412;0.243137254901961;0.239215686274510;0.235294117647059;0.231372549019608;0.227450980392157;0.223529411764706;0.219607843137255;0.215686274509804;0.211764705882353;0.207843137254902;0.203921568627451;0.203921568627451;0.200000000000000;0.196078431372549;0.192156862745098;0.184313725490196;0.184313725490196;0.180392156862745;0.176470588235294;0.172549019607843;0.168627450980392;0.164705882352941;0.160784313725490;0.156862745098039;0.152941176470588;0.149019607843137;0.145098039215686;0.141176470588235;0.137254901960784;0.133333333333333;0.129411764705882;0.125490196078431;0.121568627450980;0.117647058823529;0.113725490196078;0.109803921568627;0.105882352941176;0.101960784313725;0.0980392156862745;0.0941176470588235;0.0901960784313726;0.0862745098039216;0.0862745098039216;0.0823529411764706;0.0784313725490196;0.0745098039215686;0.0705882352941177;0.0666666666666667;0.0627450980392157;0.0588235294117647;0.0549019607843137;0.0549019607843137;0.0509803921568627;0.0470588235294118;0.0431372549019608;0.0392156862745098;0.0392156862745098;0.0352941176470588;0.0313725490196078;0.0274509803921569;0.0235294117647059;0.0196078431372549;0.0196078431372549;0.0156862745098039;0.0117647058823529;0.00784313725490196];
            g=[0.0509803921568627;0.0509803921568627;0.0549019607843137;0.0588235294117647;0.0627450980392157;0.0666666666666667;0.0705882352941177;0.0705882352941177;0.0745098039215686;0.0784313725490196;0.0823529411764706;0.0862745098039216;0.0901960784313726;0.0941176470588235;0.0980392156862745;0.0980392156862745;0.101960784313725;0.105882352941176;0.109803921568627;0.113725490196078;0.117647058823529;0.121568627450980;0.129411764705882;0.137254901960784;0.145098039215686;0.152941176470588;0.160784313725490;0.164705882352941;0.172549019607843;0.180392156862745;0.188235294117647;0.196078431372549;0.207843137254902;0.215686274509804;0.219607843137255;0.227450980392157;0.235294117647059;0.243137254901961;0.250980392156863;0.258823529411765;0.266666666666667;0.274509803921569;0.282352941176471;0.290196078431373;0.301960784313725;0.309803921568627;0.321568627450980;0.329411764705882;0.341176470588235;0.349019607843137;0.360784313725490;0.368627450980392;0.380392156862745;0.392156862745098;0.400000000000000;0.411764705882353;0.419607843137255;0.431372549019608;0.439215686274510;0.450980392156863;0.458823529411765;0.470588235294118;0.478431372549020;0.490196078431373;0.501960784313726;0.509803921568627;0.521568627450980;0.533333333333333;0.545098039215686;0.552941176470588;0.564705882352941;0.576470588235294;0.588235294117647;0.603921568627451;0.615686274509804;0.627450980392157;0.639215686274510;0.650980392156863;0.658823529411765;0.670588235294118;0.682352941176471;0.694117647058824;0.705882352941177;0.717647058823529;0.733333333333333;0.745098039215686;0.756862745098039;0.764705882352941;0.776470588235294;0.788235294117647;0.800000000000000;0.807843137254902;0.815686274509804;0.827450980392157;0.835294117647059;0.843137254901961;0.850980392156863;0.862745098039216;0.870588235294118;0.878431372549020;0.886274509803922;0.894117647058824;0.901960784313726;0.909803921568627;0.917647058823529;0.929411764705882;0.937254901960784;0.945098039215686;0.952941176470588;0.960784313725490;0.968627450980392;0.980392156862745;0.988235294117647;0.988235294117647;0.988235294117647;0.988235294117647;0.988235294117647;0.988235294117647;0.988235294117647;0.988235294117647;0.988235294117647;0.988235294117647;0.988235294117647;0.988235294117647;0.988235294117647;0.984313725490196;0.984313725490196;0.984313725490196;0.984313725490196;0.984313725490196;0.984313725490196;0.984313725490196;0.984313725490196;0.984313725490196;0.984313725490196;0.984313725490196;0.980392156862745;0.976470588235294;0.964705882352941;0.956862745098039;0.949019607843137;0.941176470588235;0.933333333333333;0.925490196078431;0.917647058823529;0.909803921568627;0.898039215686275;0.890196078431373;0.882352941176471;0.874509803921569;0.866666666666667;0.858823529411765;0.847058823529412;0.839215686274510;0.831372549019608;0.823529411764706;0.815686274509804;0.803921568627451;0.796078431372549;0.788235294117647;0.776470588235294;0.768627450980392;0.756862745098039;0.745098039215686;0.733333333333333;0.721568627450980;0.709803921568628;0.698039215686275;0.686274509803922;0.674509803921569;0.662745098039216;0.654901960784314;0.643137254901961;0.631372549019608;0.619607843137255;0.607843137254902;0.600000000000000;0.588235294117647;0.572549019607843;0.560784313725490;0.552941176470588;0.541176470588235;0.529411764705882;0.517647058823530;0.509803921568627;0.498039215686275;0.486274509803922;0.478431372549020;0.466666666666667;0.454901960784314;0.443137254901961;0.435294117647059;0.423529411764706;0.411764705882353;0.403921568627451;0.392156862745098;0.384313725490196;0.372549019607843;0.360784313725490;0.349019607843137;0.341176470588235;0.329411764705882;0.317647058823529;0.309803921568627;0.298039215686275;0.286274509803922;0.278431372549020;0.274509803921569;0.266666666666667;0.258823529411765;0.250980392156863;0.243137254901961;0.235294117647059;0.227450980392157;0.223529411764706;0.215686274509804;0.207843137254902;0.200000000000000;0.192156862745098;0.184313725490196;0.176470588235294;0.168627450980392;0.164705882352941;0.156862745098039;0.149019607843137;0.141176470588235;0.133333333333333;0.129411764705882;0.121568627450980;0.117647058823529;0.113725490196078;0.109803921568627;0.105882352941176;0.101960784313725;0.0980392156862745;0.0941176470588235;0.0901960784313726;0.0862745098039216;0.0862745098039216;0.0823529411764706;0.0784313725490196;0.0745098039215686;0.0705882352941177;0.0666666666666667;0.0627450980392157;0.0588235294117647;0.0549019607843137;0.0509803921568627;0.0470588235294118];
            b=[0.0156862745098039;0.0117647058823529;0.0117647058823529;0.0117647058823529;0.0117647058823529;0.0117647058823529;0.0117647058823529;0.0117647058823529;0.00784313725490196;0.00784313725490196;0.00784313725490196;0.00784313725490196;0.00784313725490196;0.00784313725490196;0.00784313725490196;0.00392156862745098;0.00392156862745098;0.00392156862745098;0.00392156862745098;0.00392156862745098;0.00392156862745098;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0.00392156862745098;0.00392156862745098;0.00392156862745098;0.00784313725490196;0.00784313725490196;0.0117647058823529;0.0117647058823529;0.0117647058823529;0.0156862745098039;0.0156862745098039;0.0196078431372549;0.0196078431372549;0.0196078431372549;0.0235294117647059;0.0235294117647059;0.0274509803921569;0.0274509803921569;0.0274509803921569;0.0313725490196078;0.0313725490196078;0.0313725490196078;0.0392156862745098;0.0431372549019608;0.0470588235294118;0.0509803921568627;0.0549019607843137;0.0588235294117647;0.0666666666666667;0.0705882352941177;0.0745098039215686;0.0784313725490196;0.0823529411764706;0.0901960784313726;0.0941176470588235;0.0980392156862745;0.101960784313725;0.105882352941176;0.109803921568627;0.117647058823529;0.121568627450980;0.125490196078431;0.129411764705882;0.133333333333333;0.137254901960784;0.145098039215686;0.152941176470588;0.160784313725490;0.168627450980392;0.180392156862745;0.188235294117647;0.196078431372549;0.203921568627451;0.215686274509804;0.223529411764706;0.231372549019608;0.239215686274510;0.247058823529412;0.258823529411765;0.266666666666667;0.278431372549020;0.286274509803922;0.294117647058824;0.301960784313725;0.309803921568627;0.321568627450980;0.329411764705882;0.337254901960784;0.345098039215686;0.356862745098039;0.368627450980392;0.380392156862745;0.392156862745098;0.400000000000000;0.411764705882353;0.419607843137255;0.431372549019608;0.443137254901961;0.450980392156863;0.462745098039216;0.474509803921569;0.486274509803922;0.498039215686275;0.505882352941176;0.517647058823530;0.525490196078431;0.537254901960784;0.549019607843137;0.556862745098039;0.568627450980392;0.580392156862745;0.592156862745098;0.603921568627451;0.615686274509804;0.627450980392157;0.635294117647059;0.647058823529412;0.658823529411765;0.670588235294118;0.682352941176471;0.694117647058824;0.705882352941177;0.717647058823529;0.729411764705882;0.741176470588235;0.752941176470588;0.764705882352941;0.776470588235294;0.788235294117647;0.796078431372549;0.807843137254902;0.819607843137255;0.835294117647059;0.847058823529412;0.854901960784314;0.862745098039216;0.866666666666667;0.874509803921569;0.878431372549020;0.886274509803922;0.890196078431373;0.894117647058824;0.901960784313726;0.909803921568627;0.913725490196078;0.917647058823529;0.925490196078431;0.929411764705882;0.937254901960784;0.941176470588235;0.949019607843137;0.952941176470588;0.956862745098039;0.964705882352941;0.972549019607843;0.976470588235294;0.984313725490196;0.988235294117647;0.988235294117647;0.988235294117647;0.984313725490196;0.984313725490196;0.980392156862745;0.980392156862745;0.980392156862745;0.976470588235294;0.976470588235294;0.972549019607843;0.972549019607843;0.968627450980392;0.968627450980392;0.968627450980392;0.964705882352941;0.964705882352941;0.960784313725490;0.960784313725490;0.956862745098039;0.956862745098039;0.952941176470588;0.952941176470588;0.952941176470588;0.945098039215686;0.937254901960784;0.929411764705882;0.917647058823529;0.909803921568627;0.901960784313726;0.894117647058824;0.886274509803922;0.874509803921569;0.866666666666667;0.858823529411765;0.850980392156863;0.843137254901961;0.831372549019608;0.823529411764706;0.815686274509804;0.807843137254902;0.800000000000000;0.792156862745098;0.784313725490196;0.776470588235294;0.768627450980392;0.760784313725490;0.745098039215686;0.725490196078431;0.709803921568628;0.694117647058824;0.678431372549020;0.666666666666667;0.650980392156863;0.635294117647059;0.619607843137255;0.603921568627451;0.588235294117647;0.572549019607843;0.556862745098039;0.541176470588235;0.525490196078431;0.509803921568627;0.494117647058824;0.478431372549020;0.462745098039216;0.450980392156863];
        end

        function [Response]=Find_Response(Sample,Info,i)
                if ismember('Comments', Info.Properties.VariableNames) %for day data
                    Batch_Num = 14;
                    Field=Info.Field_T_(i)*10000;
                    Vbias=Info.Vbias_V_(i);
                else
                    Batch_Num=Info.Batch_Num(i);
                    Field=Info.Field_Sweep(i);
                    Vbias=Info.Vbias(i);
                end
                disp(Field)
                
                % Need to replace
                Folder_IP=fullfile(fileparts(cd()),'Data',Sample,'IP');
                       
                % Load 
                
                % Need to improve this one
                if Batch_Num<13
                        Tip_Name='IP_Tip_220803.txt';
                        Range=350:970;  % Between ±2T
                elseif (Batch_Num>=13 && Batch_Num < 19)
                    if abs(Info.Response(i)) ~= 1 % if we took the response
                        Response = Info.Response(i);
                        disp("Response = " + num2str(Response))
                        return
                    elseif Vbias == 1.3
                        disp("Vbias 1.3")
                        Tip_Name="IP_Tip_221124_1.3.txt";
                        Range = 1:468;
                    elseif Vbias == 1.5
                        disp("Vbias 1.5")
                        Tip_Name='IP_Tip_221127_1.5.txt';
                        Range = 1:2224;  
                    end
                elseif Batch_Num >= 19 && Batch_Num < 33
                    if Vbias == 0.6
                        disp("Vbias 0.6")
                        Tip_Name="IP_Tip_221215_0.6.txt";
                        Range = 1:2126;
                    elseif Vbias == 0.4
                        disp("Vbias 0.4")
                        Tip_Name="IP_Tip_221215_0.4.txt";
                        Range = 1:2166;
                    elseif Vbias == 0.2
                        disp("Vbias 0.2")
                        Tip_Name="IP_Tip_221215_0.2.txt";
                        Range = 1:2163;
                    elseif Vbias == 0.75
                        disp("Vbias 0.75")
                        Tip_Name="IP_221216_0.75.txt";
                        Range = 1:2488;
                    elseif Vbias == 0.5
                        disp("Vbias 0.5")
                        Tip_Name= "IP_221218_0.5.txt";
                        Range = 1:1396;
                    elseif Vbias == 0.7
                        disp("Vbias 0.7")
                        Tip_Name="IP_Tip_221221_0.7V.txt";
                        Range = 1:755;
                    else
                        Response = 1;
                        return
                    end
                elseif Batch_Num >= 33
                    if Vbias == 0.5
                        disp("0.5")
                        Tip_Name="IP_Tip_230106_0.5V.txt";
                        Range = 1:748;
                    end
                end
                        
                                             
                File_IP=fullfile(Folder_IP,Tip_Name);

                IP_Data_Raw=readtable(File_IP);
                IP_Data=IP_Data_Raw(Range,:);
                %plot(IP_Data.Mag,IP_Data.Vfb)
                 % Sort the IP
                [~,B]=sort(IP_Data.Mag);
                IP.Mag=IP_Data.Mag(B);
                IP.Vfb=IP_Data.Vfb(B);

                % Find the right branch of the IP
                F=find(IP.Mag>=Field,1);
                try
                    Response=(IP.Vfb(F+2)-IP.Vfb(F-2))/(IP.Mag(F+2)-IP.Mag(F-2));  % v/G
                catch
                    % If the field in the edge of the response, its take 1 step average
                    Response=(IP.Vfb(F+1)-IP.Vfb(F-1))/(IP.Mag(F+1)-IP.Mag(F-1));  % v/G
                end
                disp("Response = " + num2str(Response))
        end
        
        function [Data]=Filter(Data,Sigma)
            if ~exist('Sigma','Var')
                Sigma=3; % set sigma to the value you need
            end
            sz = 2*ceil(2.6 * Sigma) + 1; % See note below
            mask = fspecial('gauss', sz, Sigma);
            Data=conv2(Data, mask, 'same');
        end
        
        function [Data]=Fix_IP(Data,Critiria)
            % Fix min max issue
            [L,L2]=Analyze_Movie.A(Data.*-1,Critiria);

            Max_Per_Line=zeros(length(L),1);
            for i=1:length(L)
                F=find(L(i,:)~=1,1);
                if length(F)>0
                    Max_Per_Line(i)=max(Data(i,:));
                end
            end

            F=find(Max_Per_Line~=0)
            for i=1:length(F)
                % Go over each line and replace the values of DD
                F2=find(L(F(i),:)~=1);
                for j=1:length(F2)
                % Go over each cell and replace the values of DD
                    Delta=Max_Per_Line(F(i))-Data(F(i),F2(j));
                    Data(F(i),F2(j))=Max_Per_Line(F(i))+Delta*2;
                end
            end
        end
        
        function[Min,Max,Min_List,Max_List]=Get_Min_Max(Dir,Info,Folder_Sxm,Response)% Response
            
            Min_List=[];
            Max_List=[];
            Delta=[];
            Data={};
            BatchN=num2str(Folder_Sxm(end-5:end-4));
            for i=1:length(Dir)  
%                     if (i~=7 && i~=11)
                        close all
                        Name=Dir(i).name(1:end-7);
                        j=Analyze_Movie.Find_Loc_Info(Info,Name);
                        Field=Info.Field_Sweep(j); % G
                        if ~exist('Response','Var')
                            Response=Analyze_Movie.Find_Response(BatchN,Field,Info,j);
                        end
                        sxmFile = sxm.load.loadProcessedSxM(fullfile(Folder_Sxm,Dir(i).name));
                        [Data_FW,Data_BW] = Analyze_Movie.Data(sxmFile,1);
                        Data{i}=((Data_BW)./(Response*10));   
                        Min_List(end+1)=min(min(Data{i}));
                        Max_List(end+1)=max(max(Data{i}));
                        Delta(end+1)=Max_List(end)-Min_List(end);
%                     end
            end
            F_Delta=find(max(Delta)==Delta);
            Max=Max_List(F_Delta);
            Min=Min_List(F_Delta);
        end
             
        
        function [Data]=Fix_Jump(Data)
%             Data=Data{i};
            Max=max(max(Data'));
            Mean=mean(mean(Data));
            STD=mean(std(Data))*3;
            Min=min(min(Data'));

            if Max>Mean+STD
                [A,B]=(max(Data'));
                Q=find(A==max(max(Data')));
                Data(Q,:)=Data(Q+1,:);
            elseif Min<Mean-STD
                [A,B]=(min(Data'));
                Q=find(A==min(min(Data')));
                Data(Q,:)=Data(Q+1,:);
            end
        end      
        
        function [Data_Interp]=Interp_IP(Data,BatchN,Field,Info,i)
            
            CD=cd;
            Folder_IP=fullfile(fileparts(fileparts(CD)),'Figures','SOT images','IP');

            
            if BatchN>41
                File_IP_Neg=fullfile(Folder_IP,'IP_-1.2_AWU.dat');
                File_IP_Pos=fullfile(Folder_IP,'IP_-1.2_AWU.dat');
            elseif BatchN<4
                File_IP_Neg=fullfile(Folder_IP,'IP_-1.4V.dat');
                File_IP_Pos=fullfile(Folder_IP,'IP_1.4_Hi_Res.dat');  
            elseif BatchN>32 & BatchN<42
                File_IP_Neg=fullfile(Folder_IP,'IP_-1.2_1.2V.dat');
                File_IP_Pos=fullfile(Folder_IP,'IP_1.2_-0.4V.dat');
            else
                File_IP_Neg=fullfile(Folder_IP,'IP_-1.4_-1.3V.dat');
                File_IP_Pos=fullfile(Folder_IP,'IP_1.4_-1.2V.dat');
            end

            IP_Neg_C=readcell(File_IP_Neg);
            IP_Neg=cell2table(IP_Neg_C(2:end,:),'VariableNames',IP_Neg_C(1,:));  % Info as table

            IP_Pos_C=readcell(File_IP_Pos);
            IP_Pos=cell2table(IP_Pos_C(2:end,:),'VariableNames',IP_Pos_C(1,:));  % Info as table

            % Chose the relevent IP
            if Info.Vbias(i)>0   % Use pos
                IP=IP_Pos;
            else      % Use Neg
                IP=IP_Neg;
            end

            % Sort the IP
            [~,B]=sort(IP{:,1});
            IP.Mag=IP.Mag(B);
            IP.Vfb=IP.Vfb(B);

            % Find the right branch of the IP
            F=find(IP.Mag>Field,1);
            Local_Max=islocalmax(IP.Vfb);
            Local_Min=islocalmin(IP.Vfb);
            if (IP.Vfb(F)-IP.Vfb(F+2))>0   % Negative slope
                Slope=1;
                Start=find(Local_Max(1:F)>0);
                Start=Start(end);
                End=find(Local_Min(F:end)>0);
                End=End(1)+F;
            else                            % Positive slope
                Slope=-1;  
                Start=find(Local_Min(1:F)>0);
                Start=Start(end);
                End=find(Local_Max(F:end)>0);
                End=End(1)+F;
            end

            % Delta=Data(1,1)-IP.Vfb(F);  % Off set the data to the IP
            % Data=Data-Delta;
            Data1=interp1(IP.Vfb(Start:End),IP.Mag(Start:End),Data,'pchip')-Field; 
            Data_Interp=Data1./10;  % Convert to mT
%             Data_Plot{j}=Analyze_Movie.Filter(Data_Plot{j},2); % Filter
        end
        
        function Make_Movie(Folder_Images,FrameRate,Title_Loc)
            
           % This function make a movie from images
           % Folder images: The location of the folder with the images
           % Frame rate: how many images per sec?
           % Title_Loc: If exist add the title as the first frame
           
           %  collect files
            Dir_Images=dir(Folder_Images);
            Dir_Images=Analyze_Support.Dir_Clean(Dir_Images,'jpg');
            images={};
            
            % Think
            F1_Batch=fileparts(fileparts(fileparts(Folder_Images)));
            Batch_Name=F1_Batch(end-1:end);
            Movie_Name=['Batch_',Batch_Name];
            
            % Title
            if exist('Title_Loc','Var')
               images{1}=imread(Title_Loc);
            end
            
            % Add images to cell
            for i=1:length(Dir_Images)%:-1:1
                try
                    images{end+1} = imread(fullfile(Folder_Images,Dir_Images(i).name));
                catch
                    i
                end
            end

            % Make Movie from cell
            video = VideoWriter(Movie_Name,'MPEG-4'); %create the video object
            video.FrameRate=FrameRate;
            open(video); %open the file for writing
            for i=1:length(images) %where N is the number of images
              writeVideo(video,images{i}); %write the image to file
            end
            close(video); %close the file
        end

        function Save(Dir,Data_Cell,Location)
            [~,Format]=fileparts(Location);
            Format=Format(1:5);
            for i=1:length(Dir)
                if  ~contains(Location,'Batch') % for Day data
                    Name=Dir(i).name(1:end-4);
                else
                    Name=Dir(i).name(1:end-7); % for Batch data
                end
                Data2Save=Data_Cell{i};
                switch Format
                    case 'For_M'
                        saveas(Data2Save, fullfile(Location,Name), 'jpg');
                    case 'Movie'
                        saveas(Data2Save, fullfile(Location,Name), 'jpg');
                    case 'Blank'
                        saveas(Data2Save, fullfile(Location,Name), 'jpg');
                    case 'Image'
                        export_fig(Data2Save,fullfile(Location,[Name,'.jpg']),'-nocrop')
                    case 'Matri'
                        dlmwrite(fullfile(Location,sprintf([Name,'.txt'])), Data2Save, 'delimiter', ',');
                end
            end
        end
        
        function Ic = findIc(V,n0,RFB)
            z_diff = abs(diff(V));
            avg = mean(z_diff(1:n0));
            sigma = std(z_diff(1:n0));

            c=0;
            j=n0+1;

            while c < 20
                if abs(z_diff(j)-avg) > 2*sigma
                    c = c+1;
                end
                j = j+1;
            end

            Vc =V(j-25);
            Ic=Vc/RFB;
        end
            
        

    end
end



